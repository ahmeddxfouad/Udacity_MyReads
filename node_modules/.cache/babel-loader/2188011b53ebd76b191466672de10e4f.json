{"ast":null,"code":"var _jsxFileName = \"/home/oia/Downloads/Udacity/React Session Lead/nd0191-c1-myreads/starter/src/App.js\",\n  _s = $RefreshSig$();\nimport \"./App.css\";\nimport { BrowserRouter as Router, Routes, Route, Link, useNavigate } from \"react-router-dom\";\nimport { useEffect, useState } from \"react\";\nimport { getAll, search, update } from \"./BooksAPI\";\nimport BookList from \"./BookList\";\nimport Search from \"./Search\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BookState = Object.freeze({\n  CurrentlyReading: 'currentlyReading',\n  WantToRead: 'wantToRead',\n  Read: 'read',\n  None: 'none'\n});\nfunction App() {\n  _s();\n  const [showSearchPage, setShowSearchpage] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [shelfs, setShelfs] = useState([BookState.CurrentlyReading, BookState.WantToRead, BookState.Read, BookState.None]);\n  const [books, setBooks] = useState([]);\n  // const [books, setBooks] = useState([{\n  //     cover: 'http://books.google.com/books/content?id=PGR2AwAAQBAJ&printsec=frontcover&img=1&zoom=1&imgtk=AFLRE73-GnPVEyb7MOCxDzOYF1PTQRuf6nCss9LMNOSWBpxBrz8Pm2_mFtWMMg_Y1dx92HT7cUoQBeSWjs3oEztBVhUeDFQX6-tWlWz1-feexS0mlJPjotcwFqAg6hBYDXuK_bkyHD-y&source=gbs_api',\n  //     title: 'To Kill a Mockingbird',\n  //     author: 'Harper Lee',\n  //     state: BookState.CurrentlyReading\n  //     },\n  //     {\n  //         cover: 'http://books.google.com/books/content?id=yDtCuFHXbAYC&printsec=frontcover&img=1&zoom=1&imgtk=AFLRE72RRiTR6U5OUg3IY_LpHTL2NztVWAuZYNFE8dUuC0VlYabeyegLzpAnDPeWxE6RHi0C2ehrR9Gv20LH2dtjpbcUcs8YnH5VCCAH0Y2ICaKOTvrZTCObQbsfp4UbDqQyGISCZfGN&source=gbs_api',\n  //         title: 'Ender\\'s Game',\n  //         author: 'Orson Scott Card',\n  //         state: BookState.CurrentlyReading\n  //     },\n  //     {\n  //         cover: 'http://books.google.com/books/content?id=uu1mC6zWNTwC&printsec=frontcover&img=1&zoom=1&imgtk=AFLRE73pGHfBNSsJG9Y8kRBpmLUft9O4BfItHioHolWNKOdLavw-SLcXADy3CPAfJ0_qMb18RmCa7Ds1cTdpM3dxAGJs8zfCfm8c6ggBIjzKT7XR5FIB53HHOhnsT7a0Cc-PpneWq9zX&source=gbs_api',\n  //         title: '1776',\n  //         author: 'David McCullough',\n  //         state: BookState.WantToRead\n  //     },\n  //     {\n  //         cover: 'http://books.google.com/books/content?id=wrOQLV6xB-wC&printsec=frontcover&img=1&zoom=1&imgtk=AFLRE72G3gA5A-Ka8XjOZGDFLAoUeMQBqZ9y-LCspZ2dzJTugcOcJ4C7FP0tDA8s1h9f480ISXuvYhA_ZpdvRArUL-mZyD4WW7CHyEqHYq9D3kGnrZCNiqxSRhry8TiFDCMWP61ujflB&source=gbs_api',\n  //         title: 'Harry Potter and the Sorcerer\\'s Stone',\n  //         author: 'J.K. Rowling',\n  //         state: BookState.WantToRead\n  //     },\n  //     {\n  //         cover: 'http://books.google.com/books/content?id=pD6arNyKyi8C&printsec=frontcover&img=1&zoom=1&imgtk=AFLRE70Rw0CCwNZh0SsYpQTkMbvz23npqWeUoJvVbi_gXla2m2ie_ReMWPl0xoU8Quy9fk0Zhb3szmwe8cTe4k7DAbfQ45FEzr9T7Lk0XhVpEPBvwUAztOBJ6Y0QPZylo4VbB7K5iRSk&source=gbs_api',\n  //         title: 'The Hobbit',\n  //         author: 'J.R.R. Tolkien',\n  //         state: BookState.Read\n  //     },\n  //     {\n  //         cover: 'http://books.google.com/books/content?id=1q_xAwAAQBAJ&printsec=frontcover&img=1&zoom=1&imgtk=AFLRE712CA0cBYP8VKbEcIVEuFJRdX1k30rjLM29Y-dw_qU1urEZ2cQ42La3Jkw6KmzMmXIoLTr50SWTpw6VOGq1leINsnTdLc_S5a5sn9Hao2t5YT7Ax1RqtQDiPNHIyXP46Rrw3aL8&source=gbs_api',\n  //         title: 'Oh, the Places You\\'ll Go!',\n  //         author: 'Seuss',\n  //         state: BookState.Read\n  //     },\n  //     {\n  //         cover: 'http://books.google.com/books/content?id=32haAAAAMAAJ&printsec=frontcover&img=1&zoom=1&imgtk=AFLRE72yckZ5f5bDFVIf7BGPbjA0KYYtlQ__nWB-hI_YZmZ-fScYwFy4O_fWOcPwf-pgv3pPQNJP_sT5J_xOUciD8WaKmevh1rUR-1jk7g1aCD_KeJaOpjVu0cm_11BBIUXdxbFkVMdi&source=gbs_api',\n  //         title: 'The Adventures of Tom Sawyer',\n  //         author: 'Mark Twain',\n  //         state: BookState.Read\n  //     }\n  // ]);\n\n  useEffect(() => {\n    setLoading(true);\n    getAllBooks();\n    setLoading(false);\n  }, []);\n  const getAllBooks = async () => {\n    try {\n      const newBooks = await getAll();\n      console.log('new Books: ', newBooks);\n      setBooks(newBooks);\n    } catch (error) {\n      console.error('Failed to fetch books:', error);\n    }\n  };\n  const updateBookShelf = async (book, shelf) => {\n    console.log('updateshelf book: ', shelf);\n    const updatedBooks = books.filter(b => b.title !== book.title);\n    const updatedBook = {\n      ...book,\n      shelf: shelf\n    };\n    await update(book, shelf);\n    setBooks([...updatedBooks, updatedBook]);\n  };\n  const beautifyShelf = shelf => {\n    if (shelf === BookState.Read) {\n      return \"Read\";\n    } else if (shelf === BookState.WantToRead) {\n      return \"Want to Read\";\n    } else if (shelf === BookState.CurrentlyReading) {\n      return \"Currently Reading\";\n    } else return \"None\";\n  };\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app\",\n      children: /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          element: /*#__PURE__*/_jsxDEV(BookList, {\n            books: books,\n            shelfs: shelfs,\n            BookState: BookState,\n            beautifyShelf: beautifyShelf,\n            updateBookShelf: updateBookShelf\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/search\",\n          element: /*#__PURE__*/_jsxDEV(Search, {\n            books: books,\n            shelfs: shelfs,\n            beautifyShelf: beautifyShelf,\n            updateBookShelf: updateBookShelf\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 109,\n    columnNumber: 9\n  }, this);\n\n  // return (\n  //     <div className=\"app\">\n  //         {showSearchPage ? (\n  //             <div className=\"search-books\">\n  //                 <div className=\"search-books-bar\">\n  //                     <a\n  //                         className=\"close-search\"\n  //                         onClick={() => setShowSearchpage(!showSearchPage)}\n  //         >\n  //           Close\n  //         </a>\n  //         <div className=\"search-books-input-wrapper\">\n  //           <input\n  //             type=\"text\"\n  //             placeholder=\"Search by title, author, or ISBN\"\n  //             onChange={(e) => searchBooks(e.target.value)}\n  //           />\n  //         </div>\n  //       </div>\n  //       <div className=\"search-books-results\">\n  //         <ol className=\"books-grid\">\n  //             {\n  //                 searchedBooks.map((book) => {\n  //                     return (\n  //                         <li>\n  //                             <div className=\"book\">\n  //                                 <div className=\"book-top\">\n  //                                     <div\n  //                                         className=\"book-cover\"\n  //                                         style={{\n  //                                             width: 128,\n  //                                             height: 193,\n  //                                             backgroundImage:\n  //                                                 `url(${book?.imageLinks?.smallThumbnail})`,\n  //                                         }}\n  //                                     ></div>\n  //                                     <div className=\"book-shelf-changer\">\n  //                                         <select\n  //                                             value={BookState.None}\n  //                                             onChange={(e) => updateBookShelf(book, e.target.value)}\n  //                                         >\n  //                                             <option value=\"none\" disabled>\n  //                                                 Move to...\n  //                                             </option>\n  //                                             {shelfs.map((s) => {\n  //                                                     return  <option>\n  //                                                         {s}\n  //                                                     </option>\n  //                                                 }\n  //                                             )}\n  //                                         </select>\n  //                                     </div>\n  //                                 </div>\n  //                                 <div className=\"book-title\">{book.title}</div>\n  //                                 <div className=\"book-authors\">{book.authors}</div>\n  //                             </div>\n  //                         </li>)\n  //                 })\n  //             }\n  //         </ol>\n  //       </div>\n  //     </div>\n  //   ) : ( loading ? <div> Loading </div> :\n  //     <div className=\"list-books\">\n  //       <div className=\"list-books-title\">\n  //         <h1>MyReads</h1>\n  //       </div>\n  //       <div className=\"list-books-content\">\n  //           { shelfs.filter((s) => s !== BookState.None).map( (shelf) => {\n  //               return(\n  //                   <div>\n  //                       <div className=\"bookshelf\">\n  //                           <h2 className=\"bookshelf-title\">{beautifyShelf(shelf)}</h2>\n  //                           <div className=\"bookshelf-books\">\n  //                               <ol className=\"books-grid\">\n  //                                   {\n  //                                       books.filter((book) => { return book.shelf === shelf}).map((book) => {\n  //                                           return (\n  //                                           <li>\n  //                                               <div className=\"book\">\n  //                                                   <div className=\"book-top\">\n  //                                                       <div\n  //                                                           className=\"book-cover\"\n  //                                                           style={{\n  //                                                               width: 128,\n  //                                                               height: 193,\n  //                                                               backgroundImage:\n  //                                                                   `url(${book.imageLinks.smallThumbnail})`,\n  //                                                           }}\n  //                                                       ></div>\n  //                                                       <div className=\"book-shelf-changer\">\n  //                                                           <select\n  //                                                               value={book.shelf}\n  //                                                               onChange={(e) => updateBookShelf(book, e.target.value)}\n  //                                                           >\n  //                                                               <option value=\"none\" disabled>\n  //                                                                   Move to...\n  //                                                               </option>\n  //                                                               {shelfs.map((s) => {\n  //                                                                       return <option key={s}>\n  //                                                                           {s}\n  //                                                                       </option>\n  //                                                                   }\n  //                                                               )}\n  //                                                           </select>\n  //                                                       </div>\n  //                                                   </div>\n  //                                                   <div className=\"book-title\">{book.title}</div>\n  //                                                   <div className=\"book-authors\">{book.authors.map((auth) => {\n  //                                                       return <div>{auth}</div>\n  //                                                   })}</div>\n  //                                               </div>\n  //                                           </li>)\n  //                                       })\n  //                                   }\n  //                               </ol>\n  //                           </div>\n  //                       </div>\n  //                   </div>\n  //               )\n  //           }\n  //           )}\n  //           <div>\n  //         </div>\n  //       </div>\n  //         <div className=\"open-search\">\n  //             <a onClick={() => setShowSearchpage(!showSearchPage)}>Add a book</a>\n  //         </div>\n  //     </div>\n  //         )}\n  //     </div>\n  // );\n}\n_s(App, \"25JBoySoxtpdB205DTDndYXznwA=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["BrowserRouter","Router","Routes","Route","Link","useNavigate","useEffect","useState","getAll","search","update","BookList","Search","jsxDEV","_jsxDEV","BookState","Object","freeze","CurrentlyReading","WantToRead","Read","None","App","_s","showSearchPage","setShowSearchpage","loading","setLoading","shelfs","setShelfs","books","setBooks","getAllBooks","newBooks","console","log","error","updateBookShelf","book","shelf","updatedBooks","filter","b","title","updatedBook","beautifyShelf","children","className","path","element","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/oia/Downloads/Udacity/React Session Lead/nd0191-c1-myreads/starter/src/App.js"],"sourcesContent":["import \"./App.css\";\nimport {BrowserRouter as Router, Routes, Route, Link, useNavigate} from \"react-router-dom\";\nimport {useEffect, useState} from \"react\";\nimport {getAll, search, update} from \"./BooksAPI\";\nimport BookList from \"./BookList\";\nimport Search from \"./Search\";\n\nconst BookState = Object.freeze({\n  CurrentlyReading: 'currentlyReading',\n  WantToRead: 'wantToRead',\n  Read: 'read',\n  None: 'none'\n})\n\n\nfunction App() {\n  const [showSearchPage, setShowSearchpage] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [shelfs, setShelfs] = useState([BookState.CurrentlyReading, BookState.WantToRead, BookState.Read, BookState.None]);\n    const [books, setBooks] = useState([]);\n  // const [books, setBooks] = useState([{\n  //     cover: 'http://books.google.com/books/content?id=PGR2AwAAQBAJ&printsec=frontcover&img=1&zoom=1&imgtk=AFLRE73-GnPVEyb7MOCxDzOYF1PTQRuf6nCss9LMNOSWBpxBrz8Pm2_mFtWMMg_Y1dx92HT7cUoQBeSWjs3oEztBVhUeDFQX6-tWlWz1-feexS0mlJPjotcwFqAg6hBYDXuK_bkyHD-y&source=gbs_api',\n  //     title: 'To Kill a Mockingbird',\n  //     author: 'Harper Lee',\n  //     state: BookState.CurrentlyReading\n  //     },\n  //     {\n  //         cover: 'http://books.google.com/books/content?id=yDtCuFHXbAYC&printsec=frontcover&img=1&zoom=1&imgtk=AFLRE72RRiTR6U5OUg3IY_LpHTL2NztVWAuZYNFE8dUuC0VlYabeyegLzpAnDPeWxE6RHi0C2ehrR9Gv20LH2dtjpbcUcs8YnH5VCCAH0Y2ICaKOTvrZTCObQbsfp4UbDqQyGISCZfGN&source=gbs_api',\n  //         title: 'Ender\\'s Game',\n  //         author: 'Orson Scott Card',\n  //         state: BookState.CurrentlyReading\n  //     },\n  //     {\n  //         cover: 'http://books.google.com/books/content?id=uu1mC6zWNTwC&printsec=frontcover&img=1&zoom=1&imgtk=AFLRE73pGHfBNSsJG9Y8kRBpmLUft9O4BfItHioHolWNKOdLavw-SLcXADy3CPAfJ0_qMb18RmCa7Ds1cTdpM3dxAGJs8zfCfm8c6ggBIjzKT7XR5FIB53HHOhnsT7a0Cc-PpneWq9zX&source=gbs_api',\n  //         title: '1776',\n  //         author: 'David McCullough',\n  //         state: BookState.WantToRead\n  //     },\n  //     {\n  //         cover: 'http://books.google.com/books/content?id=wrOQLV6xB-wC&printsec=frontcover&img=1&zoom=1&imgtk=AFLRE72G3gA5A-Ka8XjOZGDFLAoUeMQBqZ9y-LCspZ2dzJTugcOcJ4C7FP0tDA8s1h9f480ISXuvYhA_ZpdvRArUL-mZyD4WW7CHyEqHYq9D3kGnrZCNiqxSRhry8TiFDCMWP61ujflB&source=gbs_api',\n  //         title: 'Harry Potter and the Sorcerer\\'s Stone',\n  //         author: 'J.K. Rowling',\n  //         state: BookState.WantToRead\n  //     },\n  //     {\n  //         cover: 'http://books.google.com/books/content?id=pD6arNyKyi8C&printsec=frontcover&img=1&zoom=1&imgtk=AFLRE70Rw0CCwNZh0SsYpQTkMbvz23npqWeUoJvVbi_gXla2m2ie_ReMWPl0xoU8Quy9fk0Zhb3szmwe8cTe4k7DAbfQ45FEzr9T7Lk0XhVpEPBvwUAztOBJ6Y0QPZylo4VbB7K5iRSk&source=gbs_api',\n  //         title: 'The Hobbit',\n  //         author: 'J.R.R. Tolkien',\n  //         state: BookState.Read\n  //     },\n  //     {\n  //         cover: 'http://books.google.com/books/content?id=1q_xAwAAQBAJ&printsec=frontcover&img=1&zoom=1&imgtk=AFLRE712CA0cBYP8VKbEcIVEuFJRdX1k30rjLM29Y-dw_qU1urEZ2cQ42La3Jkw6KmzMmXIoLTr50SWTpw6VOGq1leINsnTdLc_S5a5sn9Hao2t5YT7Ax1RqtQDiPNHIyXP46Rrw3aL8&source=gbs_api',\n  //         title: 'Oh, the Places You\\'ll Go!',\n  //         author: 'Seuss',\n  //         state: BookState.Read\n  //     },\n  //     {\n  //         cover: 'http://books.google.com/books/content?id=32haAAAAMAAJ&printsec=frontcover&img=1&zoom=1&imgtk=AFLRE72yckZ5f5bDFVIf7BGPbjA0KYYtlQ__nWB-hI_YZmZ-fScYwFy4O_fWOcPwf-pgv3pPQNJP_sT5J_xOUciD8WaKmevh1rUR-1jk7g1aCD_KeJaOpjVu0cm_11BBIUXdxbFkVMdi&source=gbs_api',\n  //         title: 'The Adventures of Tom Sawyer',\n  //         author: 'Mark Twain',\n  //         state: BookState.Read\n  //     }\n  // ]);\n\n    useEffect(() => {\n        setLoading(true);\n        getAllBooks();\n        setLoading(false);\n    }, []);\n\n    const getAllBooks = async () => {\n        try {\n            const newBooks = await getAll();\n            console.log('new Books: ', newBooks);\n            setBooks(newBooks);\n        } catch (error) {\n            console.error('Failed to fetch books:', error);\n        }\n    };\n\n    const updateBookShelf = async (book, shelf) => {\n        console.log('updateshelf book: ',shelf)\n        const updatedBooks = books.filter(b => b.title !== book.title);\n        const updatedBook = {\n            ...book,\n            shelf: shelf\n        };\n        await update(book, shelf);\n        setBooks([...updatedBooks, updatedBook]);\n    };\n\n\n\n    const beautifyShelf = (shelf) =>{\n        if(shelf === BookState.Read){\n            return \"Read\";\n        }\n        else if (shelf === BookState.WantToRead)\n        {\n            return \"Want to Read\"\n        }\n        else if (shelf === BookState.CurrentlyReading)\n        {\n            return \"Currently Reading\"\n        }else  return  \"None\"\n    }\n\n    return(\n        <Router>\n            <div className=\"app\">\n                <Routes>\n                    <Route path=\"/\" element={\n                        <BookList\n                            books={books}\n                            shelfs={shelfs}\n                            BookState={BookState}\n                            beautifyShelf={beautifyShelf}\n                            updateBookShelf={updateBookShelf}\n                        />\n                    } />\n                    <Route path=\"/search\" element={\n                        <Search\n                            books={books}\n                            shelfs={shelfs}\n                            beautifyShelf={beautifyShelf}\n                            updateBookShelf={updateBookShelf}\n                        />}\n                    />\n                </Routes>\n            </div>\n        </Router>\n    );\n\n    // return (\n    //     <div className=\"app\">\n    //         {showSearchPage ? (\n    //             <div className=\"search-books\">\n    //                 <div className=\"search-books-bar\">\n    //                     <a\n    //                         className=\"close-search\"\n    //                         onClick={() => setShowSearchpage(!showSearchPage)}\n    //         >\n    //           Close\n    //         </a>\n    //         <div className=\"search-books-input-wrapper\">\n    //           <input\n    //             type=\"text\"\n    //             placeholder=\"Search by title, author, or ISBN\"\n    //             onChange={(e) => searchBooks(e.target.value)}\n    //           />\n    //         </div>\n    //       </div>\n    //       <div className=\"search-books-results\">\n    //         <ol className=\"books-grid\">\n    //             {\n    //                 searchedBooks.map((book) => {\n    //                     return (\n    //                         <li>\n    //                             <div className=\"book\">\n    //                                 <div className=\"book-top\">\n    //                                     <div\n    //                                         className=\"book-cover\"\n    //                                         style={{\n    //                                             width: 128,\n    //                                             height: 193,\n    //                                             backgroundImage:\n    //                                                 `url(${book?.imageLinks?.smallThumbnail})`,\n    //                                         }}\n    //                                     ></div>\n    //                                     <div className=\"book-shelf-changer\">\n    //                                         <select\n    //                                             value={BookState.None}\n    //                                             onChange={(e) => updateBookShelf(book, e.target.value)}\n    //                                         >\n    //                                             <option value=\"none\" disabled>\n    //                                                 Move to...\n    //                                             </option>\n    //                                             {shelfs.map((s) => {\n    //                                                     return  <option>\n    //                                                         {s}\n    //                                                     </option>\n    //                                                 }\n    //                                             )}\n    //                                         </select>\n    //                                     </div>\n    //                                 </div>\n    //                                 <div className=\"book-title\">{book.title}</div>\n    //                                 <div className=\"book-authors\">{book.authors}</div>\n    //                             </div>\n    //                         </li>)\n    //                 })\n    //             }\n    //         </ol>\n    //       </div>\n    //     </div>\n    //   ) : ( loading ? <div> Loading </div> :\n    //     <div className=\"list-books\">\n    //       <div className=\"list-books-title\">\n    //         <h1>MyReads</h1>\n    //       </div>\n    //       <div className=\"list-books-content\">\n    //           { shelfs.filter((s) => s !== BookState.None).map( (shelf) => {\n    //               return(\n    //                   <div>\n    //                       <div className=\"bookshelf\">\n    //                           <h2 className=\"bookshelf-title\">{beautifyShelf(shelf)}</h2>\n    //                           <div className=\"bookshelf-books\">\n    //                               <ol className=\"books-grid\">\n    //                                   {\n    //                                       books.filter((book) => { return book.shelf === shelf}).map((book) => {\n    //                                           return (\n    //                                           <li>\n    //                                               <div className=\"book\">\n    //                                                   <div className=\"book-top\">\n    //                                                       <div\n    //                                                           className=\"book-cover\"\n    //                                                           style={{\n    //                                                               width: 128,\n    //                                                               height: 193,\n    //                                                               backgroundImage:\n    //                                                                   `url(${book.imageLinks.smallThumbnail})`,\n    //                                                           }}\n    //                                                       ></div>\n    //                                                       <div className=\"book-shelf-changer\">\n    //                                                           <select\n    //                                                               value={book.shelf}\n    //                                                               onChange={(e) => updateBookShelf(book, e.target.value)}\n    //                                                           >\n    //                                                               <option value=\"none\" disabled>\n    //                                                                   Move to...\n    //                                                               </option>\n    //                                                               {shelfs.map((s) => {\n    //                                                                       return <option key={s}>\n    //                                                                           {s}\n    //                                                                       </option>\n    //                                                                   }\n    //                                                               )}\n    //                                                           </select>\n    //                                                       </div>\n    //                                                   </div>\n    //                                                   <div className=\"book-title\">{book.title}</div>\n    //                                                   <div className=\"book-authors\">{book.authors.map((auth) => {\n    //                                                       return <div>{auth}</div>\n    //                                                   })}</div>\n    //                                               </div>\n    //                                           </li>)\n    //                                       })\n    //                                   }\n    //                               </ol>\n    //                           </div>\n    //                       </div>\n    //                   </div>\n    //               )\n    //           }\n    //           )}\n    //           <div>\n    //         </div>\n    //       </div>\n    //         <div className=\"open-search\">\n    //             <a onClick={() => setShowSearchpage(!showSearchPage)}>Add a book</a>\n    //         </div>\n    //     </div>\n    //         )}\n    //     </div>\n    // );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}